From 7ff7742bf6330547a3c90dfdb219187d4ed864f3 Mon Sep 17 00:00:00 2001
From: Roger Zanoni <rzanoni@igalia.com>
Date: Fri, 2 Jun 2023 15:52:08 +0200
Subject: [PATCH 8/8] FIXME: Add the OnWindowConfigured callback

---
 include/cef_life_span_handler.h     |  6 ++++++
 libcef/browser/browser_host_base.cc | 15 +++++++++++++++
 libcef/browser/browser_host_base.h  |  4 ++++
 3 files changed, 25 insertions(+)

diff --git a/include/cef_life_span_handler.h b/include/cef_life_span_handler.h
index d779b075c..54f5dd9bf 100644
--- a/include/cef_life_span_handler.h
+++ b/include/cef_life_span_handler.h
@@ -209,6 +209,12 @@ class CefLifeSpanHandler : public virtual CefBaseRefCounted {
   ///
   /*--cef()--*/
   virtual void OnBeforeClose(CefRefPtr<CefBrowser> browser) {}
+
+  ///
+  /// Called when the wayland toplevel window acks the configure event
+  ///
+  /*--cef()--*/
+  virtual void OnWindowConfigured(const CefString& app_id) {}
 };
 
 #endif  // CEF_INCLUDE_CEF_LIFE_SPAN_HANDLER_H_
diff --git a/libcef/browser/browser_host_base.cc b/libcef/browser/browser_host_base.cc
index 70b06a4f8..9737b2ea3 100644
--- a/libcef/browser/browser_host_base.cc
+++ b/libcef/browser/browser_host_base.cc
@@ -29,6 +29,7 @@
 #include "content/public/browser/file_select_listener.h"
 #include "content/public/browser/navigation_entry.h"
 #include "ui/gfx/image/image_skia.h"
+#include "ui/ozone/platform/wayland/host/wayland_toplevel_window.h"
 #include "ui/shell_dialogs/select_file_policy.h"
 
 #if BUILDFLAG(IS_MAC)
@@ -192,6 +193,11 @@ CefBrowserHostBase::CefBrowserHostBase(
   contents_delegate_ =
       std::make_unique<CefBrowserContentsDelegate>(browser_info_);
   contents_delegate_->AddObserver(this);
+
+  LOG(ERROR) << "Registering OnWindowConfigured callback...";
+  ui::WaylandToplevelWindow::WindowConfiguredCallback cb = base::BindRepeating(
+      &CefBrowserHostBase::OnWindowConfigured, this);
+  ui::WaylandToplevelWindow::RegisterWindowConfiguredCallback(cb);
 }
 
 void CefBrowserHostBase::InitializeBrowser() {
@@ -969,6 +975,15 @@ void CefBrowserHostBase::OnBrowserDestroyed() {
     observer.OnBrowserDestroyed(this);
 }
 
+void CefBrowserHostBase::OnWindowConfigured(const std::string& app_id) {
+  CEF_REQUIRE_UIT();
+  if (client_) {
+    if (auto handler = client_->GetLifeSpanHandler()) {
+      handler->OnWindowConfigured(app_id);
+    }
+  }
+}
+
 int CefBrowserHostBase::browser_id() const {
   return browser_info_->browser_id();
 }
diff --git a/libcef/browser/browser_host_base.h b/libcef/browser/browser_host_base.h
index a14b27454..2162b0cd9 100644
--- a/libcef/browser/browser_host_base.h
+++ b/libcef/browser/browser_host_base.h
@@ -280,6 +280,10 @@ class CefBrowserHostBase : public CefBrowserHost,
   void OnBeforeClose();
   void OnBrowserDestroyed();
 
+  // Wayland helpers
+  // TODO(rzanoni): find the appropriate place for those methoods
+  void OnWindowConfigured(const std::string& app_id);
+
   // Thread-safe accessors.
   const CefBrowserSettings& settings() const { return settings_; }
   CefRefPtr<CefClient> client() const { return client_; }
-- 
2.37.2

